@{
    ViewData["Title"] = "Home";
}

<div id="MainFrame" class="pb-5">
    <div class="row mt-3 mb-2 p-3">
        <div class="col-6 p-1">
            <button type="button" v-on:click="searchMode = 'supplier'" v-bind:class="{'active': searchMode == 'supplier'}" class="btn btn-outline-primary btn-block">Looking for Suppliers (@ViewData["Suppliers"])</button>
        </div>
        <div class="col-6 p-1">
            <button type="button" v-on:click="searchMode = 'buyer'" v-bind:class="{'active': searchMode == 'buyer'}" class="btn btn-outline-primary btn-block">Looking for Buyers (@ViewData["Buyers"])</button>
        </div>
    </div>

    <div class="row no-gutters border-0">
        <div class="col">
            <input v-model="searchText" v-on:input="presearch()" class="form-control" type="search" placeholder="Search...">
        </div>
        <div class="col-auto">
            <button v-on:click="search();" class="btn btn-outline-primary rounded-0" type="button">
                <i class="fa fa-search"></i>
            </button>
        </div>
        <div v-if="searchRecommendations.length > 0" class="col-12 m-0 p-0 bg-white border">
            <ul class="list-unstyled">
                <li v-for="recommendation in searchRecommendations">
                    <div v-on:click="searchText = recommendation; search();" class="p-1 search-result-item">
                        <i class="fas fa-search text-secondary ml-2 mr-2"></i>
                        {{recommendation}}
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <div v-if="searchResults.shipments.length > 0" class="row mt-5 mb-5">
        <div class="col-12">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Date</th>
                            <th scope="col">Company</th>
                            <th scope="col">Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="shipment in searchResults.shipments">
                            <td scope="col">
                                <span v-html="'<span class=\'badge badge-success\'>' + shipment.shipment.date + '</span> '"></span>
                            </td>
                            <td scope="col"><button v-on:click="openResult(shipment.shipment.id);" class="btn btn-sm btn-outline-primary">{{shipment.company.name}}</button></td>
                            <td scope="col"><span v-html="getMarkedHTML(shipment.shipment.description, 80) + '...'"></span></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>


    <modal v-if="showModal" v-on:close="showModal = false"></modal>

    <!-- template for the modal component -->
    <script type="text/x-template" id="modal-template">
        <transition name="modal">
            <div class="modal-mask">
                <div class="modal-wrapper">
                    <div class="modal-container">

                        <div class="row">
                            <div class="col-12">
                                <div class="row">
                                    <div class="col-12">
                                        <h1>{{selectedItemDetails.company.name}}</h1>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-3">
                                        <img class="img-fluid" src="https://images.pexels.com/photos/273244/pexels-photo-273244.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500" />
                                    </div>
                                    <div class="col-9">
                                        <div>{{selectedItemDetails.company.address}}</div>
                                        <div>{{selectedItemDetails.company.country}}</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12">

                                <button class="modal-default-button" v-on:click="$emit('close')">
                                    OK
                                </button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </transition>
    </script>

</div>


@section scripts {
    <script src="//unpkg.com/vue-plain-pagination@0.2.1"></script>

    <script type="text/javascript">
        Vue.component('v-pagination', window['vue-plain-pagination']);
        Vue.component("modal", {template: "#modal-template",props: ["selectedItemDetails"]});

        var App = new Vue({
            el: '#MainFrame',
            data: {
                searchText: null,
                searchResults: { count: 0, shipments: [] },
                totalPages: 1,
                pageSize: 10,
                currentPage: 1,
                selectedItem: null,
                searchMode: 'supplier',
                searchRecommendations: [],
                selectedItemDetails: {
                    company: {
                        name: null,
                        address: null,
                        country:null
                    }
                },
                showModal: false,
                isAuthenticated: @(User.Identity.IsAuthenticated ? "true" : "false"),
                bootstrapPaginationClasses: {
                    ul: 'pagination mt-4 mb-4 mx-auto',
                    li: 'page-item',
                    liActive: 'active',
                    liDisable: 'disabled',
                    button: 'page-link'
                }
            },
            methods: {
                presearch:function () {
                    let self = this;
                    self.selectedItem = null;
                    if (self.searchText.length == 0) {
                        self.searchResults = { count: 0, shipments: [] };
                        self.searchRecommendations = [];
                    } else {
                        $.ajax({
                            method: "get",
                            url: "home/presearch",
                            data: { searchtext: self.searchText},
                            success: function (result) {
                                self.searchRecommendations = result;
                            }
                        });
                    };
                },
                search: function () {
                    let self = this;
                    self.selectedItem = null;
                    self.searchRecommendations = [];
                    if (self.searchText.length == 0) {
                        self.searchResults = { count: 0, shipments: [] };
                        self.searchRecommendations = [];
                    } else {
                        $.ajax({
                            method: "get",
                            url: "home/search",
                            data: { searchtext: self.searchText, page: self.currentPage, mode: self.searchMode },
                            success: function (result) {
                                self.searchResults = result;
                                self.totalPages = Math.ceil(result.count / self.pageSize);
                                if (self.searchText.length == 0) {
                                    self.searchResults = { count: 0, shipments: [] };
                                }
                            }
                        });
                    };
                },
                getMarkedHTML: function (text, len) {
                    if (text == null) { return; }
                    var reg = new RegExp(this.searchText, 'gi');
                    if (len == -1) {
                        return text.replace(reg, function (str) { return '<strong style="color:#4C8BF5;">' + str + '</strong>' });
                    } else {
                        return text.substr(0, len).replace(reg, function (str) { return '<strong style="color:#4C8BF5;">' + str + '</strong>' });
                    }
                },
                openResult: function (id) {
                    let self = this;
                    self.selectedItemDetails = null;
                    $.ajax({
                        method: "get",
                        url: "home/loadCompany",
                        data: { id: id, mode: self.searchMode },
                        success: function (result) {
                            self.selectedItemDetails = result;
                            self.selectedItem = id;
                            self.showModal = true;
                        }
                    });
                },
                sendRequest: function () {
                    alert("Request sent. Thank you!");
                }
            },
            created: function () {

            },
            watch: {
                'currentPage': function () {
                    this.search();
                }
            }
        });
    </script>

}

